Scaffolding lets you generate some basic CRUD interfaces for a domain class, including:

* The necessary [views|guide:gsp]
* Controller actions for create/read/update/delete (CRUD) operations

The way for an application to express a dependency on the scaffolding plugin is by including the following in @build.gradle@.

{code}
    dependencies {

        // ...

        runtime "org.grails.plugins:scaffolding"

        // ...

    }
{code}

h4. Static Scaffolding

Grails lets you generate a controller and the views used to create the above interface from the command line. To generate a controller type:

{code:java}
grails generate-controller Book
{code}

or to generate the views:

{code:java}
grails generate-views Book
{code}

or to generate everything:

{code:java}
grails generate-all Book
{code}

If you have a domain class in a package or are generating from a [Hibernate mapped class|guide:hibernate] remember to include the fully qualified package name:

{code:java}
grails generate-all com.bookstore.Book
{code}

h4. Customizing the Generated Views

The views adapt to [Validation constraints|guide:constraints]. For example you can change the order that fields appear in the views simply by re-ordering the constraints in the builder:

{code:java}
def constraints = {
    title()
    releaseDate()
}
{code}

You can also get the generator to generate lists instead of text inputs if you use the @inList@ constraint:

{code:java}
def constraints = {
    title()
    category(inList: ["Fiction", "Non-fiction", "Biography"])
    releaseDate()
}
{code}

Or if you use the @range@ constraint on a number:

{code:java}
def constraints = {
    age(range:18..65)
}
{code}

Restricting the size with a constraint also effects how many characters can be entered in the generated view:

{code:java}
def constraints = {
    name(size:0..30)
}
{code}

h4. Customizing the Scaffolding templates

The templates used by Grails to generate the controller and views can be customized by installing the templates with the [install-templates|commandLine] command.
